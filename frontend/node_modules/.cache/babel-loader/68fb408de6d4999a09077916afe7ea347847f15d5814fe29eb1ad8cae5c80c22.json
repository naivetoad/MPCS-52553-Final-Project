{"ast":null,"code":"var _jsxFileName = \"/Users/naivetoad/Desktop/MPCS_52553_Final_Project/frontend/src/components/messages/ReplyThread.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authFetch } from '../../utils/api';\nimport MessageItem from './MessageItem';\nimport MessageInput from './MessageInput';\nimport '../../styles/messages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReplyThread() {\n  _s();\n  const {\n    channelId,\n    messageId\n  } = useParams();\n  const [parentMessage, setParentMessage] = useState(null);\n  const [replies, setReplies] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!channelId || !messageId) return;\n    const fetchParentMessage = async () => {\n      try {\n        const response = await authFetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages/${messageId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setParentMessage(data);\n          document.title = `Thread: ${data.content.substring(0, 30)}... - Belay`;\n          navigate(`/channels/${channelId}/thread/${messageId}`, {\n            replace: true,\n            state: {\n              parentMessageContent: data.content,\n              channelId: channelId\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching parent message:', error);\n        setError('Failed to load parent message');\n      }\n    };\n    const fetchReplies = async () => {\n      try {\n        const response = await authFetch(`http://127.0.0.1:5000/api/messages/${messageId}/replies`);\n        if (response.ok) {\n          const data = await response.json();\n          setReplies(data);\n        }\n      } catch (error) {\n        console.error('Error fetching replies:', error);\n        setError('Failed to load replies');\n      }\n    };\n    fetchParentMessage();\n    fetchReplies();\n    const pollInterval = setInterval(fetchReplies, 500);\n    return () => clearInterval(pollInterval);\n  }, [channelId, messageId, navigate]);\n  if (!channelId || !messageId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Invalid thread\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply-thread\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-thread\",\n        onClick: () => navigate(`/channels/${channelId}`),\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), parentMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent-message\",\n      children: /*#__PURE__*/_jsxDEV(MessageItem, {\n        message: parentMessage,\n        channelId: channelId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"replies-list\",\n      children: replies.map(reply => /*#__PURE__*/_jsxDEV(MessageItem, {\n        message: reply,\n        channelId: channelId,\n        isReply: true\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      channelId: channelId,\n      replyTo: messageId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(ReplyThread, \"cTvoZijL68qmPqam5SCcM4tuL2o=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ReplyThread;\nexport default ReplyThread;\nvar _c;\n$RefreshReg$(_c, \"ReplyThread\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","authFetch","MessageItem","MessageInput","jsxDEV","_jsxDEV","ReplyThread","_s","channelId","messageId","parentMessage","setParentMessage","replies","setReplies","error","setError","navigate","fetchParentMessage","response","ok","data","json","document","title","content","substring","replace","state","parentMessageContent","console","fetchReplies","pollInterval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","message","map","reply","isReply","id","replyTo","_c","$RefreshReg$"],"sources":["/Users/naivetoad/Desktop/MPCS_52553_Final_Project/frontend/src/components/messages/ReplyThread.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authFetch } from '../../utils/api';\nimport MessageItem from './MessageItem';\nimport MessageInput from './MessageInput';\nimport '../../styles/messages.css';\n\nfunction ReplyThread() {\n  const { channelId, messageId } = useParams();\n  const [parentMessage, setParentMessage] = useState(null);\n  const [replies, setReplies] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!channelId || !messageId) return;\n\n    const fetchParentMessage = async () => {\n      try {\n        const response = await authFetch(\n          `http://127.0.0.1:5000/api/channels/${channelId}/messages/${messageId}`\n        );\n        if (response.ok) {\n          const data = await response.json();\n          setParentMessage(data);\n          document.title = `Thread: ${data.content.substring(0, 30)}... - Belay`;\n          navigate(`/channels/${channelId}/thread/${messageId}`, {\n            replace: true,\n            state: { \n              parentMessageContent: data.content,\n              channelId: channelId\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching parent message:', error);\n        setError('Failed to load parent message');\n      }\n    };\n\n    const fetchReplies = async () => {\n      try {\n        const response = await authFetch(\n          `http://127.0.0.1:5000/api/messages/${messageId}/replies`\n        );\n        if (response.ok) {\n          const data = await response.json();\n          setReplies(data);\n        }\n      } catch (error) {\n        console.error('Error fetching replies:', error);\n        setError('Failed to load replies');\n      }\n    };\n\n    fetchParentMessage();\n    fetchReplies();\n    const pollInterval = setInterval(fetchReplies, 500);\n    return () => clearInterval(pollInterval);\n  }, [channelId, messageId, navigate]);\n\n  if (!channelId || !messageId) {\n    return <div>Invalid thread</div>;\n  }\n\n  return (\n    <div className=\"reply-thread\">\n      <div className=\"thread-header\">\n        <button \n          className=\"close-thread\"\n          onClick={() => navigate(`/channels/${channelId}`)}\n        >\n          âœ•\n        </button>\n        <h3>Thread</h3>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {parentMessage && (\n        <div className=\"parent-message\">\n          <MessageItem \n            message={parentMessage} \n            channelId={channelId}\n          />\n        </div>\n      )}\n\n      <div className=\"replies-list\">\n        {replies.map(reply => (\n          <MessageItem \n            key={reply.id} \n            message={reply}\n            channelId={channelId}\n            isReply={true}\n          />\n        ))}\n      </div>\n\n      <MessageInput channelId={channelId} replyTo={messageId} />\n    </div>\n  );\n}\n\nexport default ReplyThread;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}