{"ast":null,"code":"var _jsxFileName = \"/Users/naivetoad/Desktop/MPCS_52553_Final_Project/frontend/src/components/messages/MessageItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { authFetch } from '../../utils/api';\nimport '../../styles/messages.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MessageItem({\n  message,\n  channelId,\n  isReply = false\n}) {\n  _s();\n  const [showReactions, setShowReactions] = useState(false);\n  const [reactions, setReactions] = useState(Array.isArray(message.reactions) ? message.reactions : []);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (Array.isArray(message.reactions)) {\n      setReactions(message.reactions);\n    }\n  }, [message.reactions]);\n  const renderContent = () => {\n    // Updated regex to better handle URL parameters\n    const urlRegex = /(https?:\\/\\/[^\\s]+\\.(?:jpg|jpeg|gif|png)(?:[?][^\\s]*)?)/gi;\n    const parts = message.content.split(urlRegex);\n    const matches = message.content.match(urlRegex) || [];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: parts.map((part, i) => {\n        if (matches.includes(part)) {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: part,\n            alt: \"\",\n            className: \"message-image\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 20\n          }, this);\n        }\n        // Only render non-empty text parts\n        return part && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: part\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 26\n        }, this);\n      })\n    }, void 0, false);\n  };\n  const addReaction = async emoji => {\n    try {\n      const response = await authFetch(`http://127.0.0.1:5000/api/messages/${message.id}/reactions`, {\n        method: 'POST',\n        body: JSON.stringify({\n          emoji\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setReactions(data.reactions || []);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Failed to add reaction');\n      }\n    } catch (error) {\n      console.error('Error adding reaction:', error);\n      setError('Failed to add reaction');\n    }\n    setShowReactions(false);\n  };\n  const removeReaction = async emoji => {\n    try {\n      const response = await authFetch(`http://127.0.0.1:5000/api/messages/${message.id}/reactions`, {\n        method: 'DELETE',\n        body: JSON.stringify({\n          emoji\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setReactions(data.reactions || []);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Failed to remove reaction');\n      }\n    } catch (error) {\n      console.error('Error removing reaction:', error);\n      setError('Failed to remove reaction');\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now - date) / (1000 * 60 * 60);\n    if (diffInHours < 24) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else if (diffInHours < 48) {\n      return 'Yesterday at ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return date.toLocaleDateString([], {\n        month: 'short',\n        day: 'numeric',\n        year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n      }) + ' at ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message-item ${isReply ? 'message-reply' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message-username\",\n        children: message.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message-time\",\n        title: new Date(message.created_at).toLocaleString(),\n        children: formatTimestamp(message.created_at)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reaction-button\",\n          onClick: () => setShowReactions(!showReactions),\n          title: \"Add Reaction\",\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/channels/${channelId}/thread/${message.id}`,\n          className: \"reply-button\",\n          title: \"Reply in Thread\",\n          children: [\"\\uD83D\\uDCAC \", message.reply_count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"reply-count\",\n            children: message.reply_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), showReactions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction-picker\",\n        children: ['👍', '❤️', '😂', '🎉', '🤔', '👀', '👎'].map(emoji => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addReaction(emoji),\n          className: \"reaction-option\",\n          children: emoji\n        }, emoji, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-reactions\",\n        children: reactions.map(reaction => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeReaction(reaction.emoji),\n          className: \"reaction-badge\",\n          title: `Reacted by:\\n${reaction.users ? reaction.users.join('\\n') : 'No users yet'}`,\n          children: [reaction.emoji, \" \", reaction.count, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"delete-x\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, reaction.emoji, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageItem, \"TchCGJ5vugz67SauvjN4cVC9Exw=\");\n_c = MessageItem;\nexport default MessageItem;\nvar _c;\n$RefreshReg$(_c, \"MessageItem\");","map":{"version":3,"names":["React","useState","useEffect","Link","authFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageItem","message","channelId","isReply","_s","showReactions","setShowReactions","reactions","setReactions","Array","isArray","error","setError","renderContent","urlRegex","parts","content","split","matches","match","children","map","part","i","includes","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","addReaction","emoji","response","id","method","body","JSON","stringify","ok","data","json","errorData","console","removeReaction","formatTimestamp","timestamp","date","Date","now","diffInHours","toLocaleTimeString","hour","minute","toLocaleDateString","month","day","year","getFullYear","undefined","username","title","created_at","toLocaleString","onClick","to","reply_count","reaction","users","join","count","_c","$RefreshReg$"],"sources":["/Users/naivetoad/Desktop/MPCS_52553_Final_Project/frontend/src/components/messages/MessageItem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { authFetch } from '../../utils/api';\nimport '../../styles/messages.css';\n\nfunction MessageItem({ message, channelId, isReply = false }) {\n  const [showReactions, setShowReactions] = useState(false);\n  const [reactions, setReactions] = useState(Array.isArray(message.reactions) ? message.reactions : []);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (Array.isArray(message.reactions)) {\n      setReactions(message.reactions);\n    }\n  }, [message.reactions]);\n\n  const renderContent = () => {\n    // Updated regex to better handle URL parameters\n    const urlRegex = /(https?:\\/\\/[^\\s]+\\.(?:jpg|jpeg|gif|png)(?:[?][^\\s]*)?)/gi;\n    const parts = message.content.split(urlRegex);\n    const matches = message.content.match(urlRegex) || [];\n  \n    return (\n      <>\n        {parts.map((part, i) => {\n          if (matches.includes(part)) {\n            return <img key={i} src={part} alt=\"\" className=\"message-image\" />;\n          }\n          // Only render non-empty text parts\n          return part && <span key={i}>{part}</span>;\n        })}\n      </>\n    );\n  };\n\n  const addReaction = async (emoji) => {\n    try {\n      const response = await authFetch(`http://127.0.0.1:5000/api/messages/${message.id}/reactions`, {\n        method: 'POST',\n        body: JSON.stringify({ emoji })\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setReactions(data.reactions || []);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Failed to add reaction');\n      }\n    } catch (error) {\n      console.error('Error adding reaction:', error);\n      setError('Failed to add reaction');\n    }\n    setShowReactions(false);\n  };\n\n  const removeReaction = async (emoji) => {\n    try {\n      const response = await authFetch(`http://127.0.0.1:5000/api/messages/${message.id}/reactions`, {\n        method: 'DELETE',\n        body: JSON.stringify({ emoji })\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setReactions(data.reactions || []);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Failed to remove reaction');\n      }\n    } catch (error) {\n      console.error('Error removing reaction:', error);\n      setError('Failed to remove reaction');\n    }\n  };\n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now - date) / (1000 * 60 * 60);\n\n    if (diffInHours < 24) {\n      return date.toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      });\n    } else if (diffInHours < 48) {\n      return 'Yesterday at ' + date.toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      });\n    } else {\n      return date.toLocaleDateString([], { \n        month: 'short', \n        day: 'numeric',\n        year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined \n      }) + ' at ' + date.toLocaleTimeString([], { \n        hour: '2-digit', \n        minute: '2-digit' \n      });\n    }\n  };\n\n  return (\n    <div className={`message-item ${isReply ? 'message-reply' : ''}`}>\n      <div className=\"message-header\">\n        <span className=\"message-username\">{message.username}</span>\n        <span className=\"message-time\" title={new Date(message.created_at).toLocaleString()}>\n          {formatTimestamp(message.created_at)}\n        </span>\n      </div>\n      \n      <div className=\"message-content\">\n        {renderContent()}\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"message-actions\">\n        <div className=\"action-buttons\">\n          {/* Add reaction button and Reply button in the same line */}\n          <button \n            className=\"reaction-button\"\n            onClick={() => setShowReactions(!showReactions)}\n            title=\"Add Reaction\"\n          >\n            😊\n          </button>\n\n          <Link \n            to={`/channels/${channelId}/thread/${message.id}`}\n            className=\"reply-button\"\n            title=\"Reply in Thread\"\n          >\n            💬 {message.reply_count > 0 && <span className=\"reply-count\">{message.reply_count}</span>}\n          </Link>\n        </div>\n\n        {/* Emoji picker */}\n        {showReactions && (\n          <div className=\"reaction-picker\">\n            {['👍', '❤️', '😂', '🎉', '🤔', '👀', '👎'].map(emoji => (\n              <button\n                key={emoji}\n                onClick={() => addReaction(emoji)}\n                className=\"reaction-option\"\n              >\n                {emoji}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {/* Display existing reactions */}\n        <div className=\"message-reactions\">\n          {reactions.map(reaction => (\n            <button \n              key={reaction.emoji}\n              onClick={() => removeReaction(reaction.emoji)}\n              className=\"reaction-badge\"\n              title={`Reacted by:\\n${reaction.users ? reaction.users.join('\\n') : 'No users yet'}`}\n            >\n              {reaction.emoji} {reaction.count}\n              <span className=\"delete-x\">✕</span>\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MessageItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}