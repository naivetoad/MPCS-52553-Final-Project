{"ast":null,"code":"var _jsxFileName = \"/Users/naivetoad/Desktop/MPCS_52553_Final_Project/frontend/src/components/messages/ReplyThread.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authFetch } from '../../utils/api';\nimport MessageItem from './MessageItem';\nimport MessageInput from './MessageInput';\nimport '../../styles/messages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReplyThread({\n  messageId,\n  channelId\n}) {\n  _s();\n  const [parentMessage, setParentMessage] = useState(null);\n  const [replies, setReplies] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  console.log('ReplyThread props:', {\n    messageId,\n    channelId\n  });\n  useEffect(() => {\n    if (!channelId || !messageId) {\n      setError('Invalid thread');\n      return;\n    }\n    const fetchParentMessage = async () => {\n      try {\n        const response = await authFetch(`http://127.0.0.1:5000/api/channels/${channelId}/messages/${messageId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setParentMessage(data);\n          document.title = `Thread: ${data.content.substring(0, 30)}... - Belay`;\n        }\n      } catch (error) {\n        console.error('Error fetching parent message:', error);\n        setError('Failed to load parent message');\n      }\n    };\n    const fetchReplies = async () => {\n      try {\n        const response = await authFetch(`http://127.0.0.1:5000/api/messages/${messageId}/replies`);\n        if (response.ok) {\n          const data = await response.json();\n          setReplies(data);\n        }\n      } catch (error) {\n        console.error('Error fetching replies:', error);\n        setError('Failed to load replies');\n      }\n    };\n    fetchParentMessage();\n    fetchReplies();\n    const pollInterval = setInterval(fetchReplies, 500);\n    return () => clearInterval(pollInterval);\n  }, [channelId, messageId]);\n  const handleClose = () => {\n    navigate(`/channels/${channelId}`);\n  };\n  if (!messageId || !channelId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-placeholder\",\n      children: \"Select a message to view replies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread-container\",\n    children: [parentMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-parent-message\",\n      children: /*#__PURE__*/_jsxDEV(MessageItem, {\n        message: parentMessage,\n        channelId: channelId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-replies\",\n      children: replies.map(reply => /*#__PURE__*/_jsxDEV(MessageItem, {\n        message: reply,\n        channelId: channelId,\n        isReply: true\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-input\",\n      children: /*#__PURE__*/_jsxDEV(MessageInput, {\n        channelId: channelId,\n        replyTo: messageId,\n        placeholder: \"Reply in thread...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(ReplyThread, \"uV1hY0med8YYoONxuEh/znoAAXY=\", false, function () {\n  return [useNavigate];\n});\n_c = ReplyThread;\nexport default ReplyThread;\nvar _c;\n$RefreshReg$(_c, \"ReplyThread\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","authFetch","MessageItem","MessageInput","jsxDEV","_jsxDEV","ReplyThread","messageId","channelId","_s","parentMessage","setParentMessage","replies","setReplies","error","setError","navigate","console","log","fetchParentMessage","response","ok","data","json","document","title","content","substring","fetchReplies","pollInterval","setInterval","clearInterval","handleClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","reply","isReply","id","replyTo","placeholder","_c","$RefreshReg$"],"sources":["/Users/naivetoad/Desktop/MPCS_52553_Final_Project/frontend/src/components/messages/ReplyThread.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authFetch } from '../../utils/api';\nimport MessageItem from './MessageItem';\nimport MessageInput from './MessageInput';\nimport '../../styles/messages.css';\n\nfunction ReplyThread({ messageId, channelId }) {\n  const [parentMessage, setParentMessage] = useState(null);\n  const [replies, setReplies] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  console.log('ReplyThread props:', { messageId, channelId });\n\n  useEffect(() => {\n    if (!channelId || !messageId) {\n      setError('Invalid thread');\n      return;\n    }\n\n    const fetchParentMessage = async () => {\n      try {\n        const response = await authFetch(\n          `http://127.0.0.1:5000/api/channels/${channelId}/messages/${messageId}`\n        );\n        if (response.ok) {\n          const data = await response.json();\n          setParentMessage(data);\n          document.title = `Thread: ${data.content.substring(0, 30)}... - Belay`;\n        }\n      } catch (error) {\n        console.error('Error fetching parent message:', error);\n        setError('Failed to load parent message');\n      }\n    };\n\n    const fetchReplies = async () => {\n      try {\n        const response = await authFetch(\n          `http://127.0.0.1:5000/api/messages/${messageId}/replies`\n        );\n        if (response.ok) {\n          const data = await response.json();\n          setReplies(data);\n        }\n      } catch (error) {\n        console.error('Error fetching replies:', error);\n        setError('Failed to load replies');\n      }\n    };\n\n    fetchParentMessage();\n    fetchReplies();\n    const pollInterval = setInterval(fetchReplies, 500);\n    return () => clearInterval(pollInterval);\n  }, [channelId, messageId]);\n\n  const handleClose = () => {\n    navigate(`/channels/${channelId}`);\n  };\n\n  if (!messageId || !channelId) {\n    return <div className=\"thread-placeholder\">Select a message to view replies</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  return (\n    <div className=\"thread-container\">\n      {parentMessage && (\n        <div className=\"thread-parent-message\">\n          <MessageItem \n            message={parentMessage} \n            channelId={channelId}\n          />\n        </div>\n      )}\n\n      <div className=\"thread-replies\">\n        {replies.map(reply => (\n          <MessageItem \n            key={reply.id} \n            message={reply}\n            channelId={channelId}\n            isReply={true}\n          />\n        ))}\n      </div>\n\n      <div className=\"thread-input\">\n        <MessageInput \n          channelId={channelId} \n          replyTo={messageId}\n          placeholder=\"Reply in thread...\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ReplyThread;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}