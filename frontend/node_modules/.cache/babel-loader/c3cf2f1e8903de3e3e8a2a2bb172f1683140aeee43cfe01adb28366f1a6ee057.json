{"ast":null,"code":"var _jsxFileName = \"/Users/naivetoad/Desktop/MPCS-52553-Web-Development-Final-Project/frontend/src/components/channels/NewChannel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { authFetch } from '../../utils/api';\nimport '../../styles/channels.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewChannel({\n  onChannelCreated\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [channelName, setChannelName] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!channelName.trim()) return;\n    try {\n      const response = await authFetch('http://127.0.0.1:5000/api/channels', {\n        method: 'POST',\n        body: JSON.stringify({\n          name: channelName\n        })\n      });\n      if (response.ok) {\n        const newChannel = await response.json();\n        onChannelCreated(newChannel);\n        setChannelName('');\n        setIsOpen(false);\n        setError('');\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Failed to create channel');\n      }\n    } catch (error) {\n      console.error('Error creating channel:', error);\n      setError('Failed to create channel');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-channel\",\n    children: !isOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-channel-button\",\n      onClick: () => setIsOpen(true),\n      children: \"+ Add Channel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"new-channel-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: channelName,\n        onChange: e => setChannelName(e.target.value),\n        placeholder: \"Enter channel name\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            setIsOpen(false);\n            setChannelName('');\n            setError('');\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(NewChannel, \"05wMbvitTMfZB71CpgFyISLbOSY=\");\n_c = NewChannel;\nexport default NewChannel;\nvar _c;\n$RefreshReg$(_c, \"NewChannel\");","map":{"version":3,"names":["React","useState","authFetch","jsxDEV","_jsxDEV","NewChannel","onChannelCreated","_s","isOpen","setIsOpen","channelName","setChannelName","error","setError","handleSubmit","e","preventDefault","trim","response","method","body","JSON","stringify","name","ok","newChannel","json","data","message","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["/Users/naivetoad/Desktop/MPCS-52553-Web-Development-Final-Project/frontend/src/components/channels/NewChannel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { authFetch } from '../../utils/api';\nimport '../../styles/channels.css';\n\nfunction NewChannel({ onChannelCreated }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [channelName, setChannelName] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!channelName.trim()) return;\n\n    try {\n      const response = await authFetch('http://127.0.0.1:5000/api/channels', {\n        method: 'POST',\n        body: JSON.stringify({ name: channelName })\n      });\n\n      if (response.ok) {\n        const newChannel = await response.json();\n        onChannelCreated(newChannel);\n        setChannelName('');\n        setIsOpen(false);\n        setError('');\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Failed to create channel');\n      }\n    } catch (error) {\n      console.error('Error creating channel:', error);\n      setError('Failed to create channel');\n    }\n  };\n\n  return (\n    <div className=\"new-channel\">\n      {!isOpen ? (\n        <button \n          className=\"new-channel-button\"\n          onClick={() => setIsOpen(true)}\n        >\n          + Add Channel\n        </button>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"new-channel-form\">\n          <input\n            type=\"text\"\n            value={channelName}\n            onChange={(e) => setChannelName(e.target.value)}\n            placeholder=\"Enter channel name\"\n            autoFocus\n          />\n          {error && <div className=\"error-message\">{error}</div>}\n          <div className=\"form-buttons\">\n            <button type=\"submit\">Create</button>\n            <button \n              type=\"button\" \n              onClick={() => {\n                setIsOpen(false);\n                setChannelName('');\n                setError('');\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default NewChannel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}